services:
  go-app:
    container_name: go-app
    build: .
    environment:
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      go_db:
        condition: service_healthy
    networks:
      - go-network
    restart: on-failure

  go_db:
    container_name: go_db
    image: postgres:12
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - go-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  pgdata:

networks:
  go-network:
    driver: bridge
